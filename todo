_ stuff required for release
  _ error touch ups
    _ use local parse errors
      _ watch code to run a debounced esprima
      _ point bindings from earhorn parse errors to local errors
    _ fix editor focus on error navigation
    _ show error in header not icon
  _ set up error logging, depending on settings
    _ rewrite fn entry to: var eh$loc; try { ... } catch(err) { eh$(eh$loc,err) }
    _ change eh$ instrumenation to: $eh(eh$loc='loc',val)
    _ verify all statements are covered
    _ errors should be red
  _ fix iframe inspector overlap
  _ (i) support sandbox when no script is selected
    _ open without iframe specified
    _ verify sandbox shows up
  _ (i) use colorized font awesome icons: play to green, pause to orange, error to red
  _ create multi-script test example
    _ in MainCtrl support editScript different from programState.currentScript
    _ message loss should just incorporate dropped messages into the tail snapshot
    _ message loss should also show a warning that messages were lost
    _ clean up reset to handle multiple scripts
    _ fix editing from multiple places
  _ use earhorn subdirectory
  _ add README for adding to a site
  _ (i) add jquery todomvc example
  _ earhorn should return same function
  _ (i) setup keybindings in settings
    _ adjust focus cmd+`
    _ play/pause cmd+p
    _ open cmd+o
    _ step cmd+, cmd+.
  _ better bookmark ui
    _ support tail-only bookmarks (?)
    _ support inline bookmark editing (?)
  _ (i) better source map support
  _ listen to other-window edits
  _ add links in readme: inventing on principle, lighttable, yinyang, tailspin
  _ consolidate add/remove logic in codemirror widget
  _ widget transitions
  _ change main to app (?)
  - earhorn server (i)
    - node-http-proxy js url
      - fs.readfile -> res.write(...earhorn+)
    - node-http-proxy specified url

_ nice-to-haves
  _ (i) plugins
  _ (i) set current script in title
  _ (i) save to file
  _ enhance traversal
    _ traverse line logs
      _ bookmark should support traversal (prev goto next <- (.) -> )
    _ go to log
    _ traverse errors
    _ step over, step out
  _ (i) harp-style js server
  _ (i) autocomplete
    _ instrumentation-based autocomplete
    _ tern-based autocomplete
  _ basic hotswapping
    _ support settings overrides?
  _ (i) sophisticated hotswapping

x show widget
  x create attribute for widget template id
  x create a template from the id
  x compile it against the scope
  x get the element
  x create attributes for widget-line, widget-ch
  x watch the attributes
  x on watch, update the widget
  x load template from $templateCache
  x watch widget location
  x look at add widget api: editor.addWidget({ line: endLine - 1, ch: endColumn }, widget.el[0])
  x have template variable for widget html
  x support widget in directive
  x bind widget to real model
  x get it working
  x widget controls its own visibility
  x build real widget template
x show current code underline
  x add currentStartCh
  x add currentStartLine
  x resolve cursorch, cursorline vs currentch currentline
  x marker: editor.markText(
x show current bookmark underline
x show hover bold
x setup hotswap
x fix code swap loss
  x look for message before current message without reverse 
  x dont reset state during message loss
  x on announcement, remove the script from the timeline
  x fix position $watch
    x add getPosition, setPosition
x fix widgets during edit
x fix timeline
  x dont reset on message loss
  x on message loss mark suspicious messages
  x identify other bugs
x fix cursor moving during edit
x fix default script selection when script is empty
x consolidate programState logic such that IT (not timeline) handles script rebuilding during announcement
x fix script dropdown display
x remove script contents
x clean up abandonAllChanges
  x for each script, reset it
  x fix: edit script, then call abandonAll
x remove .logs indirection in programState (cancel)
x support abandoning changes (x next to dropdown)
  x announcement should state when the script is altered
x swap underline and bold
x review/fix extra code change messages
x set up esprima error notification
  x figure out how i want to present these errors
  x earhorn should publish parse errors
  x show red exclamation mark by script box when any script has a parse error
  x improve dropdown and button styling
    x gray dropdown border
    x gray dropdown text
    x fixed button width
    x gray button text
    x rounded button corners
  x remove colons from error
  x they should appear at the top (for ease of development)
  x add floating error icon in codemirror top right
    x title shows script (line): error
  x show error as line widget
    x editor should support linewidgets
    x bind line widget to the error
  x clicking on it should navigate the user to the error
  11-23-13 ~58
  x fix reliance on $interval
    x create input range directive
    x re-enable $interval
  x settings
    x support settings swap
    x make button visibility dependent on settings
  x remove play notification message & css
  x change border to orange when paused
  x better script display
    x change abandon to revert
    x show revert button when only a single script is present
    x remove earhorn non-throttling rate
  x show REVERT in button
  x fix traverse from error edit: move mouse, edit, move timeline, check state
  x tie autosave to settings
  11-29-13 ~50
  x fix layout
    x show play/paused/editing message at the top center
    x disable traversal during edit
    x disable icons with css
  x fix play behavior
    x fix add a line to addition program
    x fix code flashing - old code being added
  x refactor to use fade directive instead of two css classes
    x create fade directive file
    x add to index.html
    x copy+paste directive boilerplate
    x watch attr -> set fade in / fade out
  x refactor to use disabled icons (share disabled class)
